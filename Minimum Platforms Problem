#include <vector>
#include <algorithm>

int findPlatform(std::vector<int>& arr, std::vector<int>& dep) {
    int n = arr.size();
    std::sort(arr.begin(), arr.end());
    std::sort(dep.begin(), dep.end());
    
    int cnt = 1; // Minimum one platform needed initially
    int ans = 1;
    int i = 1;   // Start checking from the second train for arrival
    int j = 0;   // Start from the first departure time
    
    while (i < n && j < n) {
        if (arr[i] <= dep[j]) {
            cnt++;  // Another platform is needed
            i++;
        } else {
            cnt--;  // One train leaves, so we need one less platform
            j++;
        }
        ans = std::max(ans, cnt); // Track the maximum platforms needed
    }
    return ans;
}
