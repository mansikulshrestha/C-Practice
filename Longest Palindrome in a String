#include <iostream>
#include <string>
using namespace std;

string longestPalin(string S) {
    int n = S.length();
    if (n <= 1) return S;  // A single character string is itself a palindrome
    
    int start = 0, maxLength = 1;
    
    // Helper function to expand around the center
    auto expandAroundCenter = [&](int left, int right) {
        while (left >= 0 && right < n && S[left] == S[right]) {
            int currentLength = right - left + 1;
            if (currentLength > maxLength) {
                start = left;
                maxLength = currentLength;
            }
            left--;
            right++;
        }
    };
    
    for (int i = 0; i < n; i++) {
        // Odd-length palindromes
        expandAroundCenter(i, i);
        // Even-length palindromes
        expandAroundCenter(i, i + 1);
    }
    
    return S.substr(start, maxLength);
}

int main() {
    string str;
    cout << "Enter a string: ";
    cin >> str;
    cout << "Longest palindromic substring: " << longestPalin(str) << endl;
    return 0;
}
